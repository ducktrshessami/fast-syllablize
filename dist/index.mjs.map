{"version":3,"sources":["../src/index.ts"],"sourcesContent":["function formatWord(word: string): string {\n    return word.replace(/[^a-z]/gi, \"\");\n}\n\nexport function syllablize(word: string): Array<string> {\n    const formatted = formatWord(word);\n    return formatted[formatted.length - 1] === \"e\" || !/[aeiouy]/i.test(formatted) ? A(formatted) : B(formatted);\n}\n\nfunction splitWord(original: string): Array<string> {\n    const syl = original.replace(/(?:[^laeiouy]|ed|[^laeiouy]e)$/i, \"\")\n        .replace(/^y/i, \"\")\n        .match(/[aeiouy]{1,2}/gi);\n    return syl ? syl : [original];\n}\n\n// Based on https://stackoverflow.com/a/51175267\nfunction A(word: string): Array<string> {\n    const results = [];\n    const split = splitWord(word).reverse();\n    while (word && split.length) {\n        let index = word.indexOf(split[split.length - 1]) + split[split.length - 1].length;\n        results.push(word.slice(0, index))\n        word = word.slice(index);\n        split.pop();\n    }\n    if (word) {\n        results[results.length - 1] += word;\n    }\n    return results;\n}\n\nexport function methodA(word: string): Array<string> {\n    return A(formatWord(word));\n}\n\nfunction B(word: string): Array<string> {\n    const res = word.match(/(?:(?<![aeiouy])[bcdfghjklmnpqrstvwxyz]{2,}|[bcdfghjklmnpqrstvwxyz])?(?:[aeiouy]{2,}(?![bcdfghjklmnpqrstvwxyz][aeiouy])|a[iu]|e[aeiu]|ie|o[aou]|[aeiouy])?(?:[bcdfghjklmnpqrstvwxyz](?![aeiouy]))*/gi) || [];\n    return res.filter(syl => syl);\n}\n\nexport function methodB(word: string): Array<string> {\n    return B(formatWord(word));\n}\n\n// Based on https://stackoverflow.com/a/49407494\nfunction C(word: string): Array<string> {\n    return word.match(/[^aeiouy]*[aeiouy]+(?:[^aeiouy]*$|[^aeiouy](?=[^aeiouy]))?/gi) || (word ? [word] : []);\n}\n\nexport function methodC(word: string): Array<string> {\n    return C(formatWord(word));\n}\n"],"mappings":"AAAA,SAASA,EAAWC,EAAsB,CACtC,OAAOA,EAAK,QAAQ,WAAY,EAAE,CACtC,CAEO,SAASC,EAAWD,EAA6B,CACpD,IAAME,EAAYH,EAAWC,CAAI,EACjC,OAAOE,EAAUA,EAAU,OAAS,CAAC,IAAM,KAAO,CAAC,YAAY,KAAKA,CAAS,EAAIC,EAAED,CAAS,EAAIE,EAAEF,CAAS,CAC/G,CAEA,SAASG,EAAUC,EAAiC,CAChD,IAAMC,EAAMD,EAAS,QAAQ,kCAAmC,EAAE,EAC7D,QAAQ,MAAO,EAAE,EACjB,MAAM,iBAAiB,EAC5B,OAAOC,GAAY,CAACD,CAAQ,CAChC,CAGA,SAASH,EAAEH,EAA6B,CACpC,IAAMQ,EAAU,CAAC,EACXC,EAAQJ,EAAUL,CAAI,EAAE,QAAQ,EACtC,KAAOA,GAAQS,EAAM,QAAQ,CACzB,IAAIC,EAAQV,EAAK,QAAQS,EAAMA,EAAM,OAAS,CAAC,CAAC,EAAIA,EAAMA,EAAM,OAAS,CAAC,EAAE,OAC5ED,EAAQ,KAAKR,EAAK,MAAM,EAAGU,CAAK,CAAC,EACjCV,EAAOA,EAAK,MAAMU,CAAK,EACvBD,EAAM,IAAI,CACd,CACA,OAAIT,IACAQ,EAAQA,EAAQ,OAAS,CAAC,GAAKR,GAE5BQ,CACX,CAEO,SAASG,EAAQX,EAA6B,CACjD,OAAOG,EAAEJ,EAAWC,CAAI,CAAC,CAC7B,CAEA,SAASI,EAAEJ,EAA6B,CAEpC,OADYA,EAAK,MAAM,WAAC,qMAAmM,IAAE,IAAK,CAAC,GACxN,OAAOO,GAAOA,CAAG,CAChC,CAEO,SAASK,EAAQZ,EAA6B,CACjD,OAAOI,EAAEL,EAAWC,CAAI,CAAC,CAC7B,CAGA,SAASa,EAAEb,EAA6B,CACpC,OAAOA,EAAK,MAAM,8DAA8D,IAAMA,EAAO,CAACA,CAAI,EAAI,CAAC,EAC3G,CAEO,SAASc,EAAQd,EAA6B,CACjD,OAAOa,EAAEd,EAAWC,CAAI,CAAC,CAC7B","names":["formatWord","word","syllablize","formatted","A","B","splitWord","original","syl","results","split","index","methodA","methodB","C","methodC"]}